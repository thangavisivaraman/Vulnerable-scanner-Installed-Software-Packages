import socket
import threading
import time
import ipaddress

def request_packages(client_ip, port):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.connect((client_ip, port))
            s.sendall(b'fetch_packages')
            
            file_data = b''
            while True:
                data = s.recv(1024)
                if not data:
                    break
                file_data += data
            
            with open(f'final_{client_ip.replace(".", "_")}.txt', 'wb') as f:
                f.write(file_data)
            return True
    except ConnectionResetError as e:
        print(f"Connection reset by peer when connecting to {client_ip}: {e}")
        return False
    except Exception as e:
        print(f"Error connecting to {client_ip}: {e}")
        return False

def handle_client(client_ip, port):
    print(f"Requesting packages from {client_ip}...")
    for attempt in range(3):
        success = request_packages(client_ip, port)
        if success:
            print(f"Packages from {client_ip} received and stored.")
            return
        else:
            print(f"Attempt {attempt+1} failed for {client_ip}. Retrying...")
            time.sleep(1)
    print(f"Failed to get packages from {client_ip} after 3 attempts.")

def main():
    subnet = "192.168.10.0/24"  # Define the subnet here
    port = 5000

    threads = []

    for ip in ipaddress.ip_network(subnet).hosts():
        thread = threading.Thread(target=handle_client, args=(str(ip), port))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

if __name__ == "__main__":
    main()
